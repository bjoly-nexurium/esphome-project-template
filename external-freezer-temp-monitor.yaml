# These substitutions allow the end user to override certain values
substitutions:
  name: "ext-freezer-temp-mon"
  project_name: "nexurium.externalFreezerTempMonitor"
    
esphome:
  name: "${name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: "${project_name}"
    version: "1.0"

esp8266:
  board: d1_mini_pro

web_server:
  port: 80
  version: 2

dallas:
  pin: GPIO2

sensor: 
  - platform: dallas
    address: 0x833c01d607afff28
    name: "Temp 1"
  - platform: dallas
    address: 0x123c01b556d49c28
    name: "Temp 2"
  - platform: dallas
    address: 0x063c01b556335c28
    name: "Temp 3"
  

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://esphome/esphome-project-template/project-template-esp8266.yaml@main

wifi:
  # Set up a wifi access point using the device name above
  ap:
    password: "123456789"

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:


##########################################################
# Most projects should not remove anything from above here
# and should just modify the name, project name/version 
# and git url for the dashboard_import
##########################################################


# Sets up the improv via serial client for Wi-Fi provisioning.
# Handy if your device has a usb port for the user to add credentials when they first get it.
improv_serial:
